#+TITLE: TODO
#+AUTHOR: Marco Paganoni

* Project structure
** DONE Main modules
The initial structure for the project will include two main modules: ~byteback-annotations~ and ~byteback-core~. The first module will be a library providing all the necessary annotations construct to annotate the projects. These will be provided to the main application ~byteback-core~.

** DONE Testing structure
Unit tests should be provided for both the ~annotations~ and the ~core~ module. To test the integration between these two modules additional integration tests will be added to the ~core~ module, which will operate on the compiled classes of the modules contained in the ~byteback-dummy~ directory.

The structure of ~byteback-dummy~ as for now will be divided based on the target version of the language features that will be supported by the ~core~ module. For instance  ~byteback-dummy:jdk1.8~ will be a test module compiled for version ~1.8~. As the necessity of supporting features present in other versions of the JDK will emerge, more similar submodules will be added.

* Core
** Wrapping Soot's interface
*** DONE Wrap Soot's singletons in SootContext
*** TODO Wrap SootClass in SootClassIR
**** Add method to access type parameters.
*** TODO Wrap SootMethod in SootMethodIR
**** Add method to access type parameters.
**** Add method to access annotations.
*** TODO Wrap SootField in SootFieldIR
**** Add method to access type parameters.
**** Add method to access annotations.
*** TODO Wrap soot.Local in SootLocalIR
**** Add method to access type parameters.
**** Add method to access annotations.
** Create type abstraction
*** TODO Structure primitive types
*** TODO Structure reference types
*** TODO Structure parametric types
** Create enhanced visitor interface for traversing Jimple's units
*** TODO Map Soot types to Byteback types
*** TODO Map Soot entities to wrapped Byteback entities
