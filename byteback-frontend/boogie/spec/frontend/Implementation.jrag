aspect Implementation {

    /**
     * Scope collections.
     */
    coll EntityTable<Implementation> Program.implementations();

    ImplementationDeclaration contributes each getImplementationList() to Program.implementations();

    /**
     * NTA definitions.
     */
    syn nta List<Implementation> ImplementationDeclaration.getImplementationList();

    eq ImplementationDeclaration.getImplementationList() {
        final List<Implementation> implementations = new List<>();

        for (Body body : getBodyList()) {
            final Implementation implementation = new Implementation();
            final Signature signature = getSignature();
            implementation.setDeclarator(getDeclarator());
            implementation.setBody(body);
            implementations.add(implementation);
        }

        return implementations;
    }

    /**
     * Looking up implementations.
     */
    syn lazy Collection<Implementation> Accessor.implementations();

    eq Accessor.implementations() = lookupImplementations(getName());

    /**
     * Lookup implementation in program.
     */
    syn lazy Collection<Implementation> Program.lookupImplementations(String name);

    eq Program.lookupImplementations(String name) = implementations().getAll(name);

    inh lazy Collection<Implementation> Accessor.lookupImplementations(String name);

    eq Program.getChild().lookupImplementations(String name) = lookupImplementations(name);

}
