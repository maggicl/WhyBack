import java.util.LinkedList;

aspect Procedure {

    /**
     * Scope collections.
     */
    coll EntityTable<Procedure> Program.procedures();

    ProcedureDeclaration contributes getProcedure() to Program.procedures();

    /**
     * NTA definitions.
     */
    syn nta Procedure ProcedureDeclaration.getProcedure();

    eq ProcedureDeclaration.getProcedure() {
        Procedure procedure = new Procedure();
        Signature signature = getSignature();
        procedure.setDeclarator(getDeclarator());
        procedure.setInputVariableList(signature.getInputVariableList());
        procedure.setOutputVariableList(signature.getOutputVariableList());
        procedure.setBodyOpt(getBodyOpt());

        return procedure;
    }

    /**
     * Looking up procedures.
     */
    syn lazy Optional<Procedure> Accessor.procedure();

    eq Accessor.procedure() = lookupProcedure(getName());

    /**
     * Lookup procedure in program.
     */
    syn lazy Optional<Procedure> Program.lookupProcedure(String name);

    eq Program.lookupProcedure(String name) = procedures().getFirst(name);

    inh lazy Optional<Procedure> Accessor.lookupProcedure(String name);

    eq Program.getChild().lookupProcedure(String name) = lookupProcedure(name);
    
}
