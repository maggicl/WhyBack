aspect VariableSpace {

    syn VariableSpace VariableSpace.add(Binding binding);

    eq VariableSpace.add(Binding binding) {
        for (Variable variable : binding.getVariableList()) {
            getVariableList().add(variable);
        }

        return this;
    }

    syn VariableSpace VariableSpace.addAll(List<? extends Binding> bindings);

    eq VariableSpace.addAll(List<? extends Binding> bindings) {
        for (Binding binding : bindings) {
            add(binding);
        }

        return this;
    }

    syn VariableSpace VariableSpace.merge(VariableSpace space);

    eq VariableSpace.merge(VariableSpace space) {
        getVariableList().addAll(space.getVariableList());

        return this;
    }

    syn Variable VariableSpace.find(String name);

    eq VariableSpace.find(String name) {
        for (Variable variable : getVariableList()) {
            if (variable.getDeclarator().getName().equals(name)) {
                return variable;
            }
        }

        return null;
    }

    syn lazy VariableSpace Program.getVariableSpace();

    eq Program.getVariableSpace() {
        VariableSpace space = new VariableSpace();

        for (Declaration declaration : getDeclarationList()) {
            VariableSpace externalSpace = declaration.getExternalVariableSpace();

            if (externalSpace != null) {
                space.merge(externalSpace);
            }
        }

        return space;
    }

    syn lazy VariableSpace Declaration.getVariableSpace();

    eq Declaration.getVariableSpace() = null;

    eq FunctionDeclaration.getVariableSpace() =
        new VariableSpace()
        .addAll(getSignature().getInputBindingList())
        .add(getSignature().getOutputBinding());

    eq ProcedureDeclaration.getVariableSpace() =
        new VariableSpace()
        .addAll(getSignature().getInputBindingList())
        .addAll(getSignature().getOutputBindingList());

    eq ImplementationDeclaration.getVariableSpace() =
        new VariableSpace()
        .addAll(getSignature().getInputBindingList())
        .addAll(getSignature().getOutputBindingList());

    eq VariableDeclaration.getVariableSpace() =
        new VariableSpace()
        .addAll(getBindingList());

    eq ConstantDeclaration.getVariableSpace() =
        new VariableSpace()
        .add(getBinding());

    syn lazy VariableSpace Body.getVariableSpace();

    eq Body.getVariableSpace() {
        VariableSpace space = new VariableSpace();

        for (VariableDeclaration declaration : getVariableDeclarations()) {
            space.addAll(declaration.getBindingList());
        }

        return space;
    }

    syn lazy VariableSpace QuantifierExpression.getVariableSpace();

    eq QuantifierExpression.getVariableSpace() =
        new VariableSpace()
        .addAll(getBindingList());

    syn lazy VariableSpace Declaration.getExternalVariableSpace();

    eq Declaration.getExternalVariableSpace() = null;

    eq VariableDeclaration.getExternalVariableSpace() = getVariableSpace();

    eq ConstantDeclaration.getExternalVariableSpace() = getVariableSpace();

}
