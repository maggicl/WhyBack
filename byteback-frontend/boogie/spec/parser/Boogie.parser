%header {:
    package byteback.frontend.boogie.parser;
    import byteback.frontend.boogie.ast.*;
:};

%goal program;

Program program
    = declaration_list.dl?
    {: return new Program(dl); :}
    ;

Declarator declarator
    = ID.n
    {: return new Declarator(n); :}
    ;

List declarator_list
    = declarator.d
    {: return new List(d); :}
    | declarator_list.dl declarator.d
    {: return dl.add(d); :}
    ;

List declarator_comma_list
    = declarator.d
    {: return new List(d); :}
    | declarator_list.dl COMMA declarator.d
    {: return dl.add(d); :}
    ;

Accessor accessor
    = ID.n
    {: return new Accessor(n); :}
    ;

MultiBinding multi_binding
    = declarator_comma_list.dl COLON type.t
    {: return new MultiBinding(t, dl); :}
    ;

List multi_binding_comma_list
    = multi_binding.b
    {: return new List(b); :}
    | multi_binding_comma_list.bl COMMA multi_binding.b
    {: return bl.add(b); :}
    ;

OptionalBinding optional_binding
    = unused_binding
    | used_binding
    ;

List optional_binding_comma_list
    = optional_binding.b
    {: return new List(b); :}
    | optional_binding_comma_list.bl COMMA optional_binding.b
    {: return bl.add(b); :}
    ;

OptionalBinding used_binding
    = declarator.d COLON unused_binding.b
    {:
       b.setDeclarator(d);
       return b;
    :}
    ;

OptionalBinding unused_binding
    = type.t
    {: return new OptionalBinding(t, new Opt()); :}
    ;