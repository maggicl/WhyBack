TypeAccess type
    = type_atom
    | map_type
    | unknown_type
    ;

List type_comma_list
    = type.t
    {: return new List(t); :}
    | type_comma_list.tl COMMA type.t
    {: return tl.add(t); :}
    ;

TypeAccess type_atom
    = BOOL
    {: return new BoolTypeAccess(); :}
    | INT
    {: return new IntegerTypeAccess(); :}
    | REAL
    {: return new RealTypeAccess(); :}
    | BVTYPE.n
    {: return new BitvectorTypeAccess(n); :}
    | LPAREN type.t RPAREN
    {: return t; :}
    ;

MapTypeAccess map_type
    = type_variable_block_list.tvl? LBRACKET type_comma_list.tl RBRACKET type.t
    {: return new MapTypeAccess(tvl, tl, t); :}
    ;

List type_variable_block_list
    = LT declarator_comma_list.dl GT
    {: return dl; :}
    ;

UnknownTypeAccess unknown_type
    = accessor.a type_constructor_list.tl?
    {: return new UnknownTypeAccess(a, tl); :}
    ;

List type_constructor_list
    = type_atom.t type_constructor_list.tl
    {: return tl.add(t); :}
    | type.t
    {: return new List(t); :}
    ;