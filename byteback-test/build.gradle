subprojects {

		def core = project(':byteback-core')

		def bytebackRoot = core.installDist.destinationDir

		def system = tasks.register('system') {
				def sourceDirs = project.sourceSets.main.allSource.srcDirs

				sourceDirs.each { dir ->
						def name = dir.getName()
						if (name.equals("java") || name.equals("scala")) {
								project.exec {
										def verify = project.findProperty("VERIFY") != null
										environment 'BYTEBACK_ROOT', bytebackRoot
										environment 'TEST_JAR', project.shadowJar.archivePath
										commandLine 'lit', '-a', dir
								}
						}
				}

				dependsOn core.installDist
				dependsOn project.shadowJar
		}

		def benchmark = tasks.register('benchmark') {
				def script = "../benchmark.py"
				def jar = project.shadowJar.archivePath
				def sourceDirs = project.sourceSets.main.allSource.srcDirs

				sourceDirs.each { dir ->
						project.exec {
								def source = dir.getName()
								def benchmark = "./benchmark/$source"
								def output = "$benchmark/results.csv"
								def tmp = "$benchmark/tmp"
								environment 'BYTEBACK_ROOT', bytebackRoot
								project.mkdir(benchmark)
								project.mkdir(tmp)

								commandLine 'python', script, '--jar', jar,
										'--source', dir, '--output', output, '--temp', tmp,
										'--extension', source
						}
				}

				dependsOn core.installDist
				dependsOn project.shadowJar
		}

}
