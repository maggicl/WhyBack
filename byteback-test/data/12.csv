kind,goal
cfg,byteback.test.casting.BoolToInt.implicit()I
cfg,byteback.test.casting.IntToReal.explicit()D
cfg,byteback.test.casting.IntToReal.implicit()D
cfg,byteback.test.casting.RealToInt.explicit()I
cfg,byteback.test.controlflow.Basic.$anonfun$emptyFor$1(I)V
cfg,byteback.test.controlflow.Basic.assignIf()V
cfg,byteback.test.controlflow.Basic.assignParameter(I)V
cfg,byteback.test.controlflow.Basic.doubleAssignment()V
cfg,byteback.test.controlflow.Basic.doubleAssignment(I)I
cfg,byteback.test.controlflow.Basic.empty()V
cfg,byteback.test.controlflow.Basic.empty()V
cfg,byteback.test.controlflow.Basic.emptyDoWhile()V
cfg,byteback.test.controlflow.Basic.emptyIf()V
cfg,byteback.test.controlflow.Basic.emptyIf(Z)V
cfg,byteback.test.controlflow.Basic.emptyIf(Z)V
cfg,byteback.test.controlflow.Basic.emptyWhile()V
cfg,byteback.test.controlflow.Basic.realCondition()V
cfg,byteback.test.controlflow.Basic.realEmptyCondition(D)V
cfg,byteback.test.controlflow.Basic.returnsNull()LJava.Lang.Object;
cfg,byteback.test.controlflow.Basic.returnsNull()LJava.Lang.Object;
cfg,byteback.test.controlflow.Basic.sum(II)I
cfg,byteback.test.controlflow.Switch.intSwitch(I)I
cfg,byteback.test.exceptions.Basic.alwaysCatches()V
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.constrainedTarget(RI)V
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.constrainedTargetAndIndex(RII)V
cfg,byteback.test.exceptions.TryFinally.catchFinallyBlock()V
cfg,byteback.test.exceptions.TryFinally.catchFinallyBlock()V
cfg,byteback.test.exceptions.TryFinally.emptyFinallyBlock()V
cfg,byteback.test.exceptions.TryFinally.finallyBlock()V
cfg,byteback.test.exceptions.TryFinally.finallyOverridesReturn()I
cfg,byteback.test.exceptions.TryFinally.finallyOverridesReturn()I
cfg,byteback.test.exceptions.TryFinally.finallyOverridesReturn()I
cfg,byteback.test.instance.Comparator$DefaultComparator.compare(II)Z
cfg,byteback.test.instance.DefaultComparator.compare(II)Z
cfg,byteback.test.instance.Dice$FixedDie.roll(I)I
cfg,byteback.test.instance.FixedDie.roll(I)I
cfg,byteback.test.library.java.util.ArrayList$ArrayListSpliterator.characteristics()I
cfg,byteback.test.library.java.util.ArrayList$Itr.hasNext()Z
cfg,byteback.test.library.java.util.ArrayList$ListItr.hasPrevious()Z
cfg,byteback.test.library.java.util.ArrayList$ListItr.nextIndex()I
cfg,byteback.test.library.java.util.ArrayList$ListItr.previousIndex()I
cfg,byteback.test.library.java.util.ArrayList$SubList$1.hasNext()Z
cfg,byteback.test.library.java.util.ArrayList$SubList$1.hasPrevious()Z
cfg,byteback.test.library.java.util.ArrayList$SubList$1.nextIndex()I
cfg,byteback.test.library.java.util.ArrayList$SubList$1.previousIndex()I
cfg,byteback.test.library.java.util.ArrayList.isEmpty()Z
cfg,byteback.test.library.java.util.ArrayList.size()I
cfg,byteback.test.library.java.util.LinkedList$LLSpliterator.characteristics()I
cfg,byteback.test.library.java.util.LinkedList$ListItr.hasNext()Z
cfg,byteback.test.library.java.util.LinkedList$ListItr.hasPrevious()Z
cfg,byteback.test.library.java.util.LinkedList$ListItr.nextIndex()I
cfg,byteback.test.library.java.util.LinkedList$ListItr.previousIndex()I
cfg,byteback.test.library.java.util.LinkedList.access$000(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.access$100(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.access$200(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.access$300(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.access$400(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.access$500(LByteback.Test.Library.Java.Util.LinkedList;)I
cfg,byteback.test.library.java.util.LinkedList.size()I
cfg,byteback.test.operation.Integer.proceduralAddition(II)I
cfg,byteback.test.operation.Integer.proceduralAssignIndirect(I)I
cfg,byteback.test.operation.Integer.proceduralAssignPlus(I)I
cfg,byteback.test.operation.Integer.proceduralAssignPlusIndirectVariables(I)I
cfg,byteback.test.operation.Integer.proceduralCommonSubExpressionPlus(I)I
cfg,byteback.test.operation.Integer.proceduralDivision(II)I
cfg,byteback.test.operation.Integer.proceduralEven(I)Z
cfg,byteback.test.operation.Integer.proceduralMinus(I)I
cfg,byteback.test.operation.Integer.proceduralModulo(II)I
cfg,byteback.test.operation.Integer.proceduralMultiplication(II)I
cfg,byteback.test.operation.Integer.proceduralNestedPlus(I)I
cfg,byteback.test.operation.Integer.proceduralOdd(I)Z
cfg,byteback.test.operation.Integer.proceduralRectangleArea(II)I
cfg,byteback.test.operation.Integer.proceduralReturnsOne()I
cfg,byteback.test.operation.Integer.proceduralReturnsZero()I
cfg,byteback.test.operation.Integer.proceduralSquare(I)I
cfg,byteback.test.operation.Integer.proceduralSquareArea(I)I
cfg,byteback.test.operation.Integer.proceduralSubtraction(II)I
cfg,byteback.test.operation.Integer.proceduralSwappingExpressionPlus(I)I
cfg,byteback.test.operation.Real.sumIfSmaller(DD)D
cfg,byteback.test.operation.StaticCall.callsPure()I
cfg,byteback.test.operation.StaticCall.proceduralIncrement(I)I
function,byteback.test.instance.FieldAccess.staticFieldReference()I
function,byteback.test.instance.FieldAccess.staticFieldSum()I
function,byteback.test.operation.Integer.addition(II)I
function,byteback.test.operation.Integer.assignIndirect(I)I
function,byteback.test.operation.Integer.assignPlus(I)I
function,byteback.test.operation.Integer.assignPlusIndirectVariables(I)I
function,byteback.test.operation.Integer.commonSubExpressionPlus(I)I
function,byteback.test.operation.Integer.division(II)I
function,byteback.test.operation.Integer.minus(I)I
function,byteback.test.operation.Integer.modulo(II)I
function,byteback.test.operation.Integer.multiplication(II)I
function,byteback.test.operation.Integer.nestedPlus(I)I
function,byteback.test.operation.Integer.rectangleArea(II)I
function,byteback.test.operation.Integer.returnsOne()I
function,byteback.test.operation.Integer.returnsZero()I
function,byteback.test.operation.Integer.square(I)I
function,byteback.test.operation.Integer.squareArea(I)I
function,byteback.test.operation.Integer.subtraction(II)I
function,byteback.test.operation.Integer.swappingExpressionPlus(I)I
function,byteback.test.operation.Real.circleArea(D)D
function,byteback.test.operation.Real.division(DD)D
function,byteback.test.operation.Real.division(FF)F
function,byteback.test.operation.Real.multiplication(DD)D
function,byteback.test.operation.Real.multiplication(FF)F
function,byteback.test.operation.StaticCall.getConstant()I
function,byteback.test.operation.StaticCall.increment(I)I
function,byteback.test.operation.StaticCall.main()I
predicate,byteback.test.algorithm.ArrayReverse.array'020is'020not'020null(RIII)Z
predicate,byteback.test.algorithm.ArrayReverse.array'020is'020null(RI)Z
predicate,byteback.test.algorithm.ArrayReverse.array_is_null(RI)Z
predicate,byteback.test.algorithm.ArrayReverse.array_is_null(RI)Z
predicate,byteback.test.algorithm.DoubleMax.array_is_not_null(RD)Z
predicate,byteback.test.algorithm.GCD.arguments'020are'020negative(II)Z
predicate,byteback.test.algorithm.GCD.arguments_are_negative(II)Z
predicate,byteback.test.algorithm.GCD.arguments_are_negative(II)Z
predicate,byteback.test.algorithm.GCD.arguments_are_positive(II)Z
predicate,byteback.test.algorithm.IntegerMax.array_is_not_null(RI)Z
predicate,byteback.test.algorithm.IntegerSum.array_is_invalid(RI)Z
predicate,byteback.test.examples.ReadResource.a_is_null(LByteback.Test.Examples.ReadResource$Resource;RI)Z
predicate,byteback.test.examples.ReadResource.r_and_a_are_not_null(LByteback.Test.Examples.ReadResource$Resource;RI)Z
predicate,byteback.test.examples.ReadResource.r_is_null(LByteback.Test.Examples.ReadResource$Resource;RI)Z
predicate,byteback.test.examples.ReadResource.r_or_a_is_null(LByteback.Test.Examples.ReadResource$Resource;RI)Z
predicate,byteback.test.exceptions.PotentialIndexOutOfBounds.index_is_negative(I)Z
predicate,byteback.test.instance.Die.outcome_is_leq_than_max(II)Z
predicate,byteback.test.instance.Die.outcome_is_positive(II)Z
predicate,byteback.test.instance.FixedDie.result_is_max(II)Z
predicate,byteback.test.library.java.util.ArrayList.illegal_capacity(I)Z
predicate,byteback.test.library.java.util.ArrayList.legal_capacity(I)Z
predicate,byteback.test.operation.Boolean.and(ZZ)Z
predicate,byteback.test.operation.Boolean.or(ZZ)Z
predicate,byteback.test.operation.Boolean.returnsFalse()Z
predicate,byteback.test.operation.Boolean.returnsTrue()Z
predicate,byteback.test.operation.Boolean.xor(ZZ)Z
predicate,byteback.test.operation.Integer.even(I)Z
predicate,byteback.test.operation.Integer.odd(I)Z
predicate,byteback.test.quantifier.Basic.existentialQuantifier()Z
predicate,byteback.test.quantifier.Basic.universalQuantifier()Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_not_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_not_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_not_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_not_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_null(LJava.Lang.Object;LJava.Lang.String;)Z
predicate,kotlin.jvm.internal.Intrinsics.parameter_is_null(LJava.Lang.Object;LJava.Lang.String;)Z
