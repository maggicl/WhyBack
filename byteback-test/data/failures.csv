kind,goal,kind
cfg,byteback.test.algorithm.BinarySearch.search(RIIII)I,
cfg,byteback.test.algorithm.Counter.incrementTo10()V,
cfg,byteback.test.algorithm.DoubleInsertionSort.sort(RD)V,
cfg,byteback.test.algorithm.DoubleMax.max(RD)D,
cfg,byteback.test.algorithm.DoubleSelectionSort.minimum(RDI)I,
cfg,byteback.test.algorithm.DoubleSelectionSort.sort(RD)V,
cfg,byteback.test.algorithm.DoubleSelectionSort.swap(RDII)V,
cfg,byteback.test.algorithm.DoubleSum.sum(RD)D,
cfg,byteback.test.algorithm.GCD.apply(II)I,
cfg,byteback.test.algorithm.GCD.apply(II)I,
cfg,byteback.test.algorithm.GCD.gcd(II)I,
cfg,byteback.test.algorithm.IntegerInsertionSort.sort(RI)V,
cfg,byteback.test.algorithm.IntegerMax.max(RI)I,
cfg,byteback.test.algorithm.IntegerSelectionSort.minimum(RII)I,
cfg,byteback.test.algorithm.IntegerSelectionSort.sort(RI)V,
cfg,byteback.test.algorithm.IntegerSelectionSort.swap(RIII)V,
cfg,byteback.test.algorithm.IntegerSum.sum(RI)I,
cfg,byteback.test.algorithm.LinearSearch.search(RIIII)I,
cfg,byteback.test.algorithm.LinearSearch.search(RLJava.Lang.Object;LJava.Lang.Object;II)I,
cfg,byteback.test.algorithm.LinearSearch.search(RLJava.Lang.Object;LJava.Lang.Object;II)I,
cfg,byteback.test.algorithm.LinearSearch.search(RLJava.Lang.Object;LJava.Lang.Object;II)I,
cfg,byteback.test.algorithm.SquareSortedArray.squareSortedArray(RI)RI,
cfg,byteback.test.array.Basic.assignElement(RI)V,
cfg,byteback.test.controlflow.Basic$_anonfun_emptyFor_1__1.<init>()V,
cfg,byteback.test.controlflow.Basic.breakInLoop()V,weak invariant
cfg,byteback.test.controlflow.Basic.emptyFor()V,weak invariant
cfg,byteback.test.controlflow.Basic.emptyFor()V,weak invariant
cfg,byteback.test.controlflow.Basic.emptyNestedFor()V,weak invariant
cfg,byteback.test.controlflow.EnhancedFor.forEach(RI)V,weak invariant
cfg,byteback.test.examples.ReadResource.readInto(LByteback.Test.Examples.ReadResource$Resource;RI)V,weak invariant
cfg,byteback.test.examples.Summary.summary(RI)I,
cfg,byteback.test.exceptions.Basic.throwsMultiple()V,bug in soot loop detection – weak invariant
cfg,byteback.test.exceptions.Basic.throwsMultiple()V,bug in soot loop detection – weak invariant
cfg,byteback.test.exceptions.Basic.throwsMultiple()V,bug in soot loop detection – weak invariant
cfg,byteback.test.exceptions.Loop.catchInWhile()V,weak invariant
cfg,byteback.test.exceptions.Loop.catchOutOfWhile()V,weak invariant
cfg,byteback.test.exceptions.Loop.throwsInFor()V,weak invariant
cfg,byteback.test.exceptions.Loop.throwsInNestedFor()V,weak invariant
cfg,byteback.test.exceptions.Loop.unreachableCatchInWhile()V,weak invariant
cfg,byteback.test.exceptions.MultiCatch.multiCatchFinally()V,weak invariant
cfg,byteback.test.exceptions.MultiCatch.multiCatchUnionAssertion()V,weak invariant
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.constrainedTarget(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds1(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds2(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds3(RI)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds4(I)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.expectedIndexOutOfBounds5(RII)V,IOBE not enabled
cfg,byteback.test.exceptions.PotentialIndexOutOfBounds.passedTarget(RI)V,
cfg,byteback.test.exceptions.PotentialNullDereference.constrainedPassedArrayTarget(RI)V,
cfg,byteback.test.exceptions.PotentialNullDereference.constrainedPassedTarget(LByteback.Test.Exceptions.PotentialNullDereference$A;)V,
cfg,byteback.test.exceptions.PotentialNullDereference.expectedArrayNullPointerException(RI)V,
cfg,byteback.test.exceptions.PotentialNullDereference.expectedNullPointerException(LByteback.Test.Exceptions.PotentialNullDereference$A;)V,
cfg,byteback.test.exceptions.TryFinally.finallyIsExecuted()V,
cfg,byteback.test.exceptions.TryFinally.finallyIsExecutedAfterThrowInCatch()V,
cfg,byteback.test.exceptions.TryFinally.finallyIsExecutedAfterThrowInCatch()V,
cfg,byteback.test.exceptions.TryFinally.finallyIsExecutedAfterThrowInCatch()V,
cfg,byteback.test.exceptions.TryFinally.finallyOverrides1NestedFinally()I,
cfg,byteback.test.exceptions.TryFinally.finallyOverrides1NestedFinally()I,
cfg,byteback.test.exceptions.TryFinally.finallyOverrides2NestedFinally()I,
cfg,byteback.test.exceptions.TryFinally.finallyOverrides2NestedFinally()I,
cfg,byteback.test.exceptions.TryFinally.finallyOverridesThrows()I,
cfg,byteback.test.exceptions.TryFinally.finallyOverridesThrows()I,
cfg,byteback.test.exceptions.TryFinally.unreachableCatch()V,
cfg,byteback.test.exceptions.TryFinally.unreachableCatch()V,
cfg,byteback.test.exceptions.TryWithResources$Resource.<init>()V,
cfg,byteback.test.exceptions.TryWithResources$Resource.close()V,
cfg,byteback.test.exceptions.TryWithResources.nested2TryWithResourcesOn2Resources()V,
cfg,byteback.test.exceptions.TryWithResources.nested2TryWithResourcesOnSingleResource()V,
cfg,byteback.test.exceptions.TryWithResources.nested3TryWithResourcesOn3Resources()V,
cfg,byteback.test.exceptions.TryWithResources.nested3TryWithResourcesOnSingleResource()V,
cfg,byteback.test.exceptions.TryWithResources.throwingTryWithResourcesClosesResource()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesAliases()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesFinallyClosesResource()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesFinallyOnExistingResourceClosesResource()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesOn2Resources()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesOn3Resources()V,
cfg,byteback.test.exceptions.TryWithResources.tryWithResourcesOnExistingResourceClosesResource()V,
cfg,byteback.test.generics.List.<init>(LJava.Lang.Object;LByteback.Test.Generics.List;)V,
cfg,byteback.test.generics.List.main()V,
cfg,byteback.test.instance.Comparator.main()V,
cfg,byteback.test.instance.Comparator.main()V,
cfg,byteback.test.instance.Counter.countTo10()V,
cfg,byteback.test.instance.Counter.countTo10Indirectly()V,
cfg,byteback.test.instance.Counter.incrementTo10()V,
cfg,byteback.test.library.java.util.AbstractCollection.addAll(LJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.clear()V,
cfg,byteback.test.library.java.util.AbstractCollection.contains(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.containsAll(LJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.hugeCapacity(I)I,
cfg,byteback.test.library.java.util.AbstractCollection.remove(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.removeAll(LJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.retainAll(LJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.AbstractCollection.toArray()RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.AbstractCollection.toArray(RLJava.Lang.Object;)RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.AbstractCollection.toString()LJava.Lang.String;,
cfg,byteback.test.library.java.util.AbstractList$Itr.<init>(LByteback.Test.Library.Java.Util.AbstractList;)V,
cfg,byteback.test.library.java.util.AbstractList$ListItr.<init>(LByteback.Test.Library.Java.Util.AbstractList;I)V,
cfg,byteback.test.library.java.util.AbstractList.addAll(ILJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.AbstractList.equals(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.AbstractList.hashCode()I,
cfg,byteback.test.library.java.util.AbstractList.indexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.AbstractList.iterator()LJava.Util.Iterator;,
cfg,byteback.test.library.java.util.AbstractList.lastIndexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.AbstractList.listIterator(I)LJava.Util.ListIterator;,
cfg,byteback.test.library.java.util.AbstractList.rangeCheckForAdd(I)V,
cfg,byteback.test.library.java.util.AbstractList.remove(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.AbstractList.removeRange(II)V,
cfg,byteback.test.library.java.util.AbstractList.set(ILJava.Lang.Object;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.AbstractList.subList(II)LJava.Util.List;,
cfg,byteback.test.library.java.util.ArrayList$ArrayListSpliterator.forEachRemaining(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.ArrayList$ArrayListSpliterator.tryAdvance(LJava.Util.Function.Consumer;)Z,
cfg,byteback.test.library.java.util.ArrayList$ArrayListSpliterator.trySplit()LByteback.Test.Library.Java.Util.ArrayList$ArrayListSpliterator;,
cfg,byteback.test.library.java.util.ArrayList$Itr.forEachRemaining(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.ArrayList$Itr.next()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$Itr.remove()V,
cfg,byteback.test.library.java.util.ArrayList$ListItr.add(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList$ListItr.previous()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$ListItr.set(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.add(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.checkForComodification()V,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.forEachRemaining(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.next()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.previous()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.remove()V,
cfg,byteback.test.library.java.util.ArrayList$SubList$1.set(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList$SubList.add(ILJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList$SubList.addAll(ILJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.ArrayList$SubList.get(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$SubList.listIterator(I)LJava.Util.ListIterator;,
cfg,byteback.test.library.java.util.ArrayList$SubList.rangeCheck(I)V,
cfg,byteback.test.library.java.util.ArrayList$SubList.rangeCheckForAdd(I)V,
cfg,byteback.test.library.java.util.ArrayList$SubList.remove(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$SubList.removeRange(II)V,
cfg,byteback.test.library.java.util.ArrayList$SubList.set(ILJava.Lang.Object;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList$SubList.spliterator()LJava.Util.Spliterator;,
cfg,byteback.test.library.java.util.ArrayList$SubList.subList(II)LJava.Util.List;,
cfg,byteback.test.library.java.util.ArrayList.<init>(I)V,
cfg,byteback.test.library.java.util.ArrayList.<init>(LJava.Util.Collection;)V,
cfg,byteback.test.library.java.util.ArrayList.add(ILJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.ArrayList.addAll(ILJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.ArrayList.addAll(LJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.ArrayList.batchRemove(LJava.Util.Collection;Z)Z,
cfg,byteback.test.library.java.util.ArrayList.clone()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.elementData(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.ensureExplicitCapacity(I)V,
cfg,byteback.test.library.java.util.ArrayList.fastRemove(I)V,
cfg,byteback.test.library.java.util.ArrayList.forEach(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.ArrayList.get(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.indexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.ArrayList.iterator()LJava.Util.Iterator;,
cfg,byteback.test.library.java.util.ArrayList.lastIndexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.ArrayList.listIterator()LJava.Util.ListIterator;,
cfg,byteback.test.library.java.util.ArrayList.listIterator(I)LJava.Util.ListIterator;,
cfg,byteback.test.library.java.util.ArrayList.rangeCheck(I)V,
cfg,byteback.test.library.java.util.ArrayList.rangeCheckForAdd(I)V,
cfg,byteback.test.library.java.util.ArrayList.readObject(LJava.Io.ObjectInputStream;)V,
cfg,byteback.test.library.java.util.ArrayList.remove(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.remove(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.ArrayList.removeIf(LJava.Util.Function.Predicate;)Z,
cfg,byteback.test.library.java.util.ArrayList.removeRange(II)V,
cfg,byteback.test.library.java.util.ArrayList.replaceAll(LJava.Util.Function.UnaryOperator;)V,
cfg,byteback.test.library.java.util.ArrayList.set(ILJava.Lang.Object;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.sort(LJava.Util.Comparator;)V,
cfg,byteback.test.library.java.util.ArrayList.spliterator()LJava.Util.Spliterator;,
cfg,byteback.test.library.java.util.ArrayList.subList(II)LJava.Util.List;,
cfg,byteback.test.library.java.util.ArrayList.toArray()RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.toArray(RLJava.Lang.Object;)RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.ArrayList.trimToSize()V,
cfg,byteback.test.library.java.util.ArrayList.writeObject(LJava.Io.ObjectOutputStream;)V,
cfg,byteback.test.library.java.util.LinkedList$DescendingIterator.<init>(LByteback.Test.Library.Java.Util.LinkedList;)V,
cfg,byteback.test.library.java.util.LinkedList$DescendingIterator.hasNext()Z,
cfg,byteback.test.library.java.util.LinkedList$DescendingIterator.next()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList$DescendingIterator.remove()V,
cfg,byteback.test.library.java.util.LinkedList$LLSpliterator.forEachRemaining(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.LinkedList$LLSpliterator.getEst()I,
cfg,byteback.test.library.java.util.LinkedList$LLSpliterator.tryAdvance(LJava.Util.Function.Consumer;)Z,
cfg,byteback.test.library.java.util.LinkedList$LLSpliterator.trySplit()LJava.Util.Spliterator;,
cfg,byteback.test.library.java.util.LinkedList$ListItr.<init>(LByteback.Test.Library.Java.Util.LinkedList;I)V,
cfg,byteback.test.library.java.util.LinkedList$ListItr.add(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.LinkedList$ListItr.checkForComodification()V,
cfg,byteback.test.library.java.util.LinkedList$ListItr.forEachRemaining(LJava.Util.Function.Consumer;)V,
cfg,byteback.test.library.java.util.LinkedList$ListItr.next()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList$ListItr.previous()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList$ListItr.remove()V,
cfg,byteback.test.library.java.util.LinkedList.add(ILJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.LinkedList.addAll(ILJava.Util.Collection;)Z,
cfg,byteback.test.library.java.util.LinkedList.checkElementIndex(I)V,
cfg,byteback.test.library.java.util.LinkedList.checkPositionIndex(I)V,
cfg,byteback.test.library.java.util.LinkedList.clone()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.descendingIterator()LJava.Util.Iterator;,
cfg,byteback.test.library.java.util.LinkedList.get(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.getFirst()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.getLast()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.indexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.LinkedList.lastIndexOf(LJava.Lang.Object;)I,
cfg,byteback.test.library.java.util.LinkedList.linkBefore(LJava.Lang.Object;LByteback.Test.Library.Java.Util.LinkedList$Node;)V,
cfg,byteback.test.library.java.util.LinkedList.linkFirst(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.LinkedList.linkLast(LJava.Lang.Object;)V,
cfg,byteback.test.library.java.util.LinkedList.listIterator(I)LJava.Util.ListIterator;,
cfg,byteback.test.library.java.util.LinkedList.node(I)LByteback.Test.Library.Java.Util.LinkedList$Node;,
cfg,byteback.test.library.java.util.LinkedList.poll()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.pollFirst()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.pollLast()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.readObject(LJava.Io.ObjectInputStream;)V,
cfg,byteback.test.library.java.util.LinkedList.remove(I)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.remove(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.LinkedList.removeFirst()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.removeLast()LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.removeLastOccurrence(LJava.Lang.Object;)Z,
cfg,byteback.test.library.java.util.LinkedList.set(ILJava.Lang.Object;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.spliterator()LJava.Util.Spliterator;,
cfg,byteback.test.library.java.util.LinkedList.superClone()LByteback.Test.Library.Java.Util.LinkedList;,
cfg,byteback.test.library.java.util.LinkedList.toArray()RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.toArray(RLJava.Lang.Object;)RLJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.unlink(LByteback.Test.Library.Java.Util.LinkedList$Node;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.unlinkFirst(LByteback.Test.Library.Java.Util.LinkedList$Node;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.unlinkLast(LByteback.Test.Library.Java.Util.LinkedList$Node;)LJava.Lang.Object;,
cfg,byteback.test.library.java.util.LinkedList.writeObject(LJava.Io.ObjectOutputStream;)V,
cfg,byteback.test.library.java.util.RandomAccessSubList.<init>(LByteback.Test.Library.Java.Util.AbstractList;II)V,
cfg,byteback.test.library.java.util.SubList.<init>(LByteback.Test.Library.Java.Util.AbstractList;II)V,
cfg,byteback.test.operation.VirtualCall.proceduralGetThat(LByteback.Test.Operation.VirtualCall;)LByteback.Test.Operation.VirtualCall;,
cfg,java.lang.UnsupportedOperationException.<init>()V,
cfg,java.lang.reflect.Array.newInstance(LJava.Lang.Class;I)LJava.Lang.Object;,
cfg,java.util.function.UnaryOperator.apply(LJava.Lang.Object;)LJava.Lang.Object;,
function,byteback.test.algorithm.GCD.gcd'020recursive(II)I,
function,byteback.test.algorithm.GCD.gcd_recursive(II)I,
function,byteback.test.algorithm.GCD.gcd_recursive(II)I,
function,byteback.test.generics.List.getElement()LJava.Lang.Object;,
function,byteback.test.generics.List.getTail()LByteback.Test.Generics.List;,
function,byteback.test.operation.VirtualCall.getThat(LByteback.Test.Operation.VirtualCall;)LByteback.Test.Operation.VirtualCall;,
predicate,byteback.test.algorithm.ArrayReverse.reverse'020of(RIRI)Z,
predicate,byteback.test.algorithm.ArrayReverse.reverse_of(RIRI)Z,
predicate,byteback.test.algorithm.ArrayReverse.reverse_of(RIRI)Z,
predicate,byteback.test.algorithm.DoubleInsertionSort.sorted(RDII)Z,
predicate,byteback.test.algorithm.DoubleMax.max_in_range(RDDII)Z,
predicate,byteback.test.algorithm.DoubleSelectionSort.is_minimum(RDIII)Z,
predicate,byteback.test.algorithm.DoubleSelectionSort.partitioned(RDI)Z,
predicate,byteback.test.algorithm.DoubleSelectionSort.sorted(RDII)Z,
predicate,byteback.test.algorithm.DoubleSum.positive_arguments(RD)Z,
predicate,byteback.test.algorithm.IntegerInsertionSort.sorted(RIII)Z,
predicate,byteback.test.algorithm.IntegerMax.max_in_range(RIIII)Z,
predicate,byteback.test.algorithm.IntegerSelectionSort.is_minimum(RIIII)Z,
predicate,byteback.test.algorithm.IntegerSelectionSort.partitioned(RII)Z,
predicate,byteback.test.algorithm.IntegerSelectionSort.sorted(RIII)Z,
predicate,byteback.test.algorithm.IntegerSum.positive_arguments(RI)Z,
predicate,byteback.test.algorithm.SquareSortedArray.sorted(RIII)Z,
predicate,byteback.test.array.Basic.last_element_is_1(RI)Z,
predicate,byteback.test.controlflow.EnhancedFor.contains(RII)Z,
predicate,byteback.test.examples.ReadResource.r_is_closed(LByteback.Test.Examples.ReadResource$Resource;RI)Z,
predicate,byteback.test.examples.ReadResource.r_is_open(LByteback.Test.Examples.ReadResource$Resource;RI)Z,
predicate,byteback.test.examples.Summary.contains(RIIII)Z,
predicate,byteback.test.library.java.util.ArrayList$SubList$1.modCount_is_invalid()Z,
