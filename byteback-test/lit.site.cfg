# -*- Python -*-

import lit.formats
import os
import sys
from lit import Test

# Do not return an error code for UNRESOLVED tests
Test.UNRESOLVED.isFailure = False

byteback_executable = os.getenv('BYTEBACK_ROOT') + "/bin/byteback-cli"
test_jar = os.getenv('TEST_JAR')

# Tests configuration
lit_config.note('using Python {}'.format(sys.version))

config.name = 'ByteBack'
config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.java', '.scala', '.kt']
config.substitutions.append(("%{byteback}", byteback_executable))
config.substitutions.append(("%{jar}", test_jar))


def script(x):
    return os.path.join(os.path.dirname(os.path.abspath(__file__)), "scripts", x)

config.substitutions.append(("%{translate}", script("translate.sh") + " " + os.getenv('HEAP')))
config.substitutions.append(("%{verify}", script("verify.sh") + " " + os.getenv('PROVER')))

if 'JAVA_HOME' in os.environ:
    config.environment['JAVA_HOME'] = os.environ['JAVA_HOME']
