module Program
  (* prelude import *)
  use prelude.ptr.Ptr
  use prelude.typing.Type
  use prelude.exceptions.Throw
  use export prelude.bootstrap.Bootstrap
  use export prelude.logic.Operators
  use export prelude.numeric.Operators
  use export prelude.boolean.Operators
  use export prelude.ptr.Operators
  use prelude.heap.Z
  use prelude.heap.B
  use prelude.heap.S
  use prelude.heap.C
  use prelude.heap.I
  use prelude.heap.J
  use prelude.heap.F
  use prelude.heap.D
  use prelude.heap.L
  use prelude.heap.RZ
  use prelude.heap.RB
  use prelude.heap.RS
  use prelude.heap.RC
  use prelude.heap.RI
  use prelude.heap.RJ
  use prelude.heap.RF
  use prelude.heap.RD
  use prelude.heap.Heap

  let cfg byteback_test_controlflow_Basic_emptyDoWhile'7'7V (heap: Heap.t) : unit
    requires { LCMP.eq caughtexception Ptr.null }
  =
    {
      goto L1
    }
    L1 {
      goto L2
    }
    L2 {
      invariant { (is_null caughtexception) /\ true };
      switch (ICMP.ne (0:jint) (0:jint))
      | True -> goto L2
      | False -> goto L3
      end
    }
    L3 {
      return ()
    }
end
